package com.sigrap.product;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import com.sigrap.category.CategoryInfo;

import io.swagger.v3.oas.annotations.media.Schema;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

/**
 * Response object containing product information.
 * Used for returning product data in API responses.
 *
 * <p>This class:
 * <ul>
 *   <li>Represents product read operations</li>
 *   <li>Includes complete product details</li>
 *   <li>Contains category information</li>
 *   <li>Tracks audit timestamps</li>
 * </ul></p>
 *
 * <p>Key Features:
 * <ul>
 *   <li>Immutable product data</li>
 *   <li>Price information</li>
 *   <li>Category association</li>
 *   <li>Audit trail</li>
 * </ul></p>
 *
 * <p>Usage Example:
 * <pre>
 * ProductInfo info = ProductInfo.builder()
 *     .id(1)
 *     .name("Blue Pen")
 *     .description("High-quality blue ink pen")
 *     .costPrice(new BigDecimal("1.50"))
 *     .salePrice(new BigDecimal("2.50"))
 *     .category(categoryInfo)
 *     .createdAt(LocalDateTime.now())
 *     .updatedAt(LocalDateTime.now())
 *     .build();
 * </pre></p>
 *
 * @see ProductController
 * @see ProductService
 * @see ProductMapper
 * @see CategoryInfo
 */
@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
@Schema(description = "Response object containing product information")
public class ProductInfo {

  /**
   * The unique identifier of the product.
   *
   * <p>Properties:
   * <ul>
   *   <li>Auto-generated by the database</li>
   *   <li>Immutable after creation</li>
   *   <li>Used as primary key</li>
   * </ul></p>
   */
  @Schema(description = "Unique identifier of the product", example = "1")
  private Integer id;

  /**
   * The name of the product.
   *
   * <p>Properties:
   * <ul>
   *   <li>Unique across all products</li>
   *   <li>Used for display and search</li>
   *   <li>Main identifier for users</li>
   * </ul></p>
   */
  @Schema(description = "Name of the product", example = "Blue Pen")
  private String name;

  /**
   * The description of the product.
   *
   * <p>Properties:
   * <ul>
   *   <li>Optional detailed information</li>
   *   <li>Provides product specifications</li>
   *   <li>Used for documentation</li>
   * </ul></p>
   */
  @Schema(
    description = "Description of the product",
    example = "High-quality blue ink pen"
  )
  private String description;

  /**
   * The cost price of the product.
   *
   * <p>Properties:
   * <ul>
   *   <li>Purchase price from supplier</li>
   *   <li>Used for profit calculations</li>
   *   <li>Stored with 2 decimal places</li>
   * </ul></p>
   */
  @Schema(description = "Cost price of the product", example = "1.50")
  private BigDecimal costPrice;

  /**
   * The sale price of the product.
   *
   * <p>Properties:
   * <ul>
   *   <li>Price charged to customers</li>
   *   <li>Used for revenue calculations</li>
   *   <li>Stored with 2 decimal places</li>
   * </ul></p>
   */
  @Schema(description = "Sale price of the product", example = "2.50")
  private BigDecimal salePrice;

  /**
   * The current stock quantity of the product.
   *
   * <p>Properties:
   * <ul>
   *   <li>Current inventory level</li>
   *   <li>Used for stock management</li>
   * </ul></p>
   */
  @Schema(description = "Current stock quantity", example = "100")
  private Integer stock;

  /**
   * The minimum stock threshold for the product.
   *
   * <p>Properties:
   * <ul>
   *   <li>Level to trigger reorder alerts</li>
   *   <li>Used for inventory planning</li>
   * </ul></p>
   */
  @Schema(
    description = "Minimum stock threshold for reorder alerts",
    example = "10"
  )
  private Integer minimumStockThreshold;

  /**
   * The category the product belongs to.
   *
   * <p>Properties:
   * <ul>
   *   <li>Complete category information</li>
   *   <li>Used for product organization</li>
   *   <li>Supports filtering and grouping</li>
   * </ul></p>
   *
   * @see CategoryInfo
   */
  @Schema(description = "Category the product belongs to")
  private CategoryInfo category;

  /**
   * The timestamp when the product was created.
   *
   * <p>Properties:
   * <ul>
   *   <li>Automatically set on creation</li>
   *   <li>Immutable after creation</li>
   *   <li>Used for auditing</li>
   * </ul></p>
   */
  @Schema(
    description = "Date and time when the product was created",
    example = "2023-01-15T10:30:00"
  )
  private LocalDateTime createdAt;

  /**
   * The timestamp when the product was last updated.
   *
   * <p>Properties:
   * <ul>
   *   <li>Automatically updated on changes</li>
   *   <li>Used for tracking modifications</li>
   *   <li>Helps with versioning</li>
   * </ul></p>
   */
  @Schema(
    description = "Date and time when the product was last updated",
    example = "2023-01-20T14:45:00"
  )
  private LocalDateTime updatedAt;
}
